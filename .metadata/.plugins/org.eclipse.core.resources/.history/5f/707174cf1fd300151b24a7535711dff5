import SimEnvironment.AnalogSink;
import SimEnvironment.AnalogSource;

// BeamRegul class to be written by you
public class BeamRegul extends Thread {
	// IO interface declarations
	private AnalogSource analogIn;
	private AnalogSink analogOut;
	private AnalogSink analogRef;

	private double uMin = -10.0;
	private double uMax = 10.0;

	private PI pi;

	private ReferenceGenerator refgen;

	public BeamRegul(ReferenceGenerator refgen, Beam beam, int priority) {
		// ...
		// Code to initialize the IO
		analogIn = beam.getSource(0);
		analogOut = beam.getSink(0);
		analogRef = beam.getSink(1);
		// ...

		pi = new PI("Regulator");

		this.refgen = refgen;
		setPriority(priority);
	}

	public void run() {
		try {
			while (!Thread.interrupted()) {
				// Code to perform IO
				double y = analogIn.get();
				double ref = refgen.getRef();

				synchronized (pi) {
					double u = pi.calculateOutput(y, ref);
					u = Math.min(u, uMax);
					u = Math.max(u, uMin);
					analogOut.set(u);
					pi.updateState(u);
				}

				

				
				analogRef.set(ref);

				Thread.sleep(pi.getHMillis());
			}
		} catch (InterruptedException e) {
		}
		System.out.println("BeamRegulator stopped.");
	}
}